Updated code:

<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Enhanced To-Do App</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .container {
            background: white;
            border-radius: 20px;
            padding: 40px;
            box-shadow: 0 20px 60px rgba(0,0,0,0.3);
            max-width: 600px;
            width: 100%;
        }

        .quote {
            text-align: center;
            font-style: italic;
            color: #667eea;
            margin-bottom: 30px;
            font-size: 18px;
            line-height: 1.6;
            font-weight: 500;
        }

        h1 {
            font-size: 32px;
            margin-bottom: 25px;
            color: #333;
            text-align: center;
        }

        .stats {
            display: flex;
            justify-content: space-around;
            margin-bottom: 25px;
            padding: 15px;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            border-radius: 10px;
        }

        .stat-item {
            text-align: center;
        }

        .stat-number {
            font-size: 24px;
            font-weight: bold;
            color: #667eea;
        }

        .stat-label {
            font-size: 12px;
            color: #666;
            margin-top: 5px;
        }

        .input-container {
            display: flex;
            gap: 10px;
            margin-bottom: 20px;
        }

        #todoInput {
            flex: 1;
            padding: 15px;
            font-size: 16px;
            border: 2px solid #e0e0e0;
            border-radius: 10px;
            transition: border-color 0.3s;
        }

        #todoInput:focus {
            outline: none;
            border-color: #667eea;
        }

        .btn {
            padding: 15px 25px;
            font-size: 16px;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s;
        }

        #addButton {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        #addButton:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
        }

        .filter-buttons {
            display: flex;
            gap: 10px;
            margin-bottom: 20px;
            justify-content: center;
        }

        .filter-btn {
            padding: 8px 16px;
            border: 2px solid #667eea;
            background: white;
            color: #667eea;
            border-radius: 20px;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.3s;
        }

        .filter-btn.active {
            background: #667eea;
            color: white;
        }

        #todoList {
            list-style: none;
            padding: 0;
        }

        #todoList li {
            padding: 15px;
            margin-bottom: 10px;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            border-radius: 10px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            transition: all 0.3s;
            animation: slideIn 0.3s ease;
        }

        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateX(-20px);
            }
            to {
                opacity: 1;
                transform: translateX(0);
            }
        }

        #todoList li:hover {
            transform: translateX(5px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        #todoList li.completed {
            background: linear-gradient(135deg, #d4fc79 0%, #96e6a1 100%);
        }

        #todoList li.completed .task-text {
            text-decoration: line-through;
            opacity: 0.6;
        }

        .task-content {
            display: flex;
            align-items: center;
            gap: 15px;
            flex: 1;
        }

        .task-text {
            flex: 1;
            color: #333;
            font-size: 16px;
        }

        .task-buttons {
            display: flex;
            gap: 8px;
        }

        .complete-btn {
            background: linear-gradient(135deg, #84fab0 0%, #8fd3f4 100%);
            color: white;
            padding: 8px 16px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.3s;
        }

        .complete-btn:hover {
            transform: scale(1.05);
        }

        .edit-btn {
            background: linear-gradient(135deg, #fbc2eb 0%, #a6c1ee 100%);
            color: white;
            padding: 8px 16px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.3s;
        }

        .edit-btn:hover {
            transform: scale(1.05);
        }

        .delete-btn {
            background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            color: white;
            padding: 8px 16px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.3s;
        }

        .delete-btn:hover {
            transform: scale(1.05);
        }

        .clear-all {
            width: 100%;
            margin-top: 20px;
            background: linear-gradient(135deg, #fa709a 0%, #fee140 100%);
            color: white;
        }

        .clear-all:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(250, 112, 154, 0.4);
        }

        .empty-state {
            text-align: center;
            padding: 40px;
            color: #999;
            font-size: 18px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="quote">"The secret of getting ahead is getting started." - Mark Twain</div>
        
        <h1>✨ My To-Do List</h1>

        <div class="stats">
            <div class="stat-item">
                <div class="stat-number" id="totalTasks">0</div>
                <div class="stat-label">Total</div>
            </div>
            <div class="stat-item">
                <div class="stat-number" id="activeTasks">0</div>
                <div class="stat-label">Active</div>
            </div>
            <div class="stat-item">
                <div class="stat-number" id="completedTasks">0</div>
                <div class="stat-label">Completed</div>
            </div>
        </div>

        <div class="input-container">
            <input type="text" id="todoInput" placeholder="What needs to be done?">
            <button id="addButton" class="btn">Add Task</button>
        </div>

        <div class="filter-buttons">
            <button class="filter-btn active" data-filter="all">All</button>
            <button class="filter-btn" data-filter="active">Active</button>
            <button class="filter-btn" data-filter="completed">Completed</button>
        </div>

        <ul id="todoList"></ul>

        <button id="clearCompleted" class="btn clear-all">Clear Completed Tasks</button>
    </div>

    <script>
        const todoInput = document.getElementById('todoInput');
        const addButton = document.getElementById('addButton');
        const todoList = document.getElementById('todoList');
        const filterButtons = document.querySelectorAll('.filter-btn');
        const clearCompletedBtn = document.getElementById('clearCompleted');

        let todos = [];
        let currentFilter = 'all';

        function updateStats() {
            const total = todos.length;
            const completed = todos.filter(t => t.completed).length;
            const active = total - completed;

            document.getElementById('totalTasks').textContent = total;
            document.getElementById('activeTasks').textContent = active;
            document.getElementById('completedTasks').textContent = completed;
        }

        function renderTodos() {
            todoList.innerHTML = '';
            
            let filteredTodos = todos;
            if (currentFilter === 'active') {
                filteredTodos = todos.filter(t => !t.completed);
            } else if (currentFilter === 'completed') {
                filteredTodos = todos.filter(t => t.completed);
            }

            if (filteredTodos.length === 0) {
                todoList.innerHTML = '<div class="empty-state">No tasks to show! 🎉</div>';
                return;
            }

            filteredTodos.forEach((todo, index) => {
                const li = document.createElement('li');
                if (todo.completed) li.classList.add('completed');

                const taskContent = document.createElement('div');
                taskContent.className = 'task-content';

                const taskText = document.createElement('span');
                taskText.className = 'task-text';
                taskText.textContent = todo.text;

                taskContent.appendChild(taskText);

                const buttonContainer = document.createElement('div');
                buttonContainer.className = 'task-buttons';

                const completeBtn = document.createElement('button');
                completeBtn.className = 'complete-btn';
                completeBtn.textContent = todo.completed ? '↩ Undo' : '✓ Done';
                completeBtn.onclick = () => toggleComplete(todo.id);

                const editBtn = document.createElement('button');
                editBtn.className = 'edit-btn';
                editBtn.textContent = '✏ Edit';
                editBtn.onclick = () => editTodo(todo.id);

                const deleteBtn = document.createElement('button');
                deleteBtn.className = 'delete-btn';
                deleteBtn.textContent = '✕ Delete';
                deleteBtn.onclick = () => deleteTodo(todo.id);

                buttonContainer.appendChild(completeBtn);
                buttonContainer.appendChild(editBtn);
                buttonContainer.appendChild(deleteBtn);

                li.appendChild(taskContent);
                li.appendChild(buttonContainer);
                todoList.appendChild(li);
            });

            updateStats();
        }

        function addTodo() {
            const taskText = todoInput.value.trim();

            if (taskText === '') {
                alert('Please enter a task!');
                return;
            }

            const newTodo = {
                id: Date.now(),
                text: taskText,
                completed: false
            };

            todos.push(newTodo);
            todoInput.value = '';
            todoInput.focus();
            renderTodos();
        }

        function toggleComplete(id) {
            const todo = todos.find(t => t.id === id);
            if (todo) {
                todo.completed = !todo.completed;
                renderTodos();
            }
        }

        function editTodo(id) {
            const todo = todos.find(t => t.id === id);
            if (todo) {
                const newText = prompt('Edit task:', todo.text);
                if (newText !== null && newText.trim() !== '') {
                    todo.text = newText.trim();
                    renderTodos();
                }
            }
        }

        function deleteTodo(id) {
            todos = todos.filter(t => t.id !== id);
            renderTodos();
        }

        function clearCompleted() {
            todos = todos.filter(t => !t.completed);
            renderTodos();
        }

        addButton.addEventListener('click', addTodo);

        todoInput.addEventListener('keypress', function(event) {
            if (event.key === 'Enter') {
                addTodo();
            }
        });

        filterButtons.forEach(btn => {
            btn.addEventListener('click', function() {
                filterButtons.forEach(b => b.classList.remove('active'));
                this.classList.add('active');
                currentFilter = this.dataset.filter;
                renderTodos();
            });
        });

        clearCompletedBtn.addEventListener('click', clearCompleted);

        renderTodos();
    </script>
</body>
</html>
